# Generated by Django 5.0.4 on 2024-05-09 10:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FelonyList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('felony_name', models.CharField(max_length=60)),
                ('felony_charge', models.IntegerField()),
                ('felony_details', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RegisteredVehicleOwner',
            fields=[
                ('registered_vehicle_owner', models.CharField(max_length=30)),
                ('registered_owner_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('registered_owner_email', models.EmailField(max_length=255)),
                ('registered_owner_address', models.CharField(max_length=160)),
                ('registered_owner_dob', models.DateField()),
                ('registered_owner_data_create', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Police', 'Police'), ('BRTA_Staff', 'BRTA_Staff')], max_length=30)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RegisteredVehicle',
            fields=[
                ('city_name', models.CharField(max_length=30)),
                ('vehicle_classification', models.CharField(max_length=10)),
                ('vin', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('engine_cc', models.IntegerField()),
                ('vehicle_brand', models.CharField(max_length=30)),
                ('registered_owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.registeredvehicleowner')),
            ],
        ),
        migrations.CreateModel(
            name='IncidentVehicular',
            fields=[
                ('incident_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('incident_title', models.CharField(max_length=100)),
                ('submition_date', models.DateTimeField(auto_now_add=True)),
                ('felony', models.ManyToManyField(to='myapp.felonylist')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.registeredvehicle')),
                ('registered_owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.registeredvehicleowner')),
            ],
        ),
    ]
